#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DatTiec.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DatTiec")]
	public partial class dbDatTiecDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAdmin(Admin instance);
    partial void UpdateAdmin(Admin instance);
    partial void DeleteAdmin(Admin instance);
    partial void InsertCTDonDat(CTDonDat instance);
    partial void UpdateCTDonDat(CTDonDat instance);
    partial void DeleteCTDonDat(CTDonDat instance);
    partial void InsertDonDatTiec(DonDatTiec instance);
    partial void UpdateDonDatTiec(DonDatTiec instance);
    partial void DeleteDonDatTiec(DonDatTiec instance);
    partial void InsertHoaDon(HoaDon instance);
    partial void UpdateHoaDon(HoaDon instance);
    partial void DeleteHoaDon(HoaDon instance);
    partial void InsertLoaiThucDon(LoaiThucDon instance);
    partial void UpdateLoaiThucDon(LoaiThucDon instance);
    partial void DeleteLoaiThucDon(LoaiThucDon instance);
    partial void InsertNhanVien(NhanVien instance);
    partial void UpdateNhanVien(NhanVien instance);
    partial void DeleteNhanVien(NhanVien instance);
    partial void InsertSanh(Sanh instance);
    partial void UpdateSanh(Sanh instance);
    partial void DeleteSanh(Sanh instance);
    partial void InsertThucDon(ThucDon instance);
    partial void UpdateThucDon(ThucDon instance);
    partial void DeleteThucDon(ThucDon instance);
    #endregion
		
		public dbDatTiecDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DatTiecConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbDatTiecDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDatTiecDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDatTiecDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDatTiecDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Admin> Admins
		{
			get
			{
				return this.GetTable<Admin>();
			}
		}
		
		public System.Data.Linq.Table<CTDonDat> CTDonDats
		{
			get
			{
				return this.GetTable<CTDonDat>();
			}
		}
		
		public System.Data.Linq.Table<DonDatTiec> DonDatTiecs
		{
			get
			{
				return this.GetTable<DonDatTiec>();
			}
		}
		
		public System.Data.Linq.Table<HoaDon> HoaDons
		{
			get
			{
				return this.GetTable<HoaDon>();
			}
		}
		
		public System.Data.Linq.Table<LoaiThucDon> LoaiThucDons
		{
			get
			{
				return this.GetTable<LoaiThucDon>();
			}
		}
		
		public System.Data.Linq.Table<NhanVien> NhanViens
		{
			get
			{
				return this.GetTable<NhanVien>();
			}
		}
		
		public System.Data.Linq.Table<Sanh> Sanhs
		{
			get
			{
				return this.GetTable<Sanh>();
			}
		}
		
		public System.Data.Linq.Table<ThucDon> ThucDons
		{
			get
			{
				return this.GetTable<ThucDon>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admin")]
	public partial class Admin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserAdmin;
		
		private string _PassAdmin;
		
		private string _HoTen;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserAdminChanging(string value);
    partial void OnUserAdminChanged();
    partial void OnPassAdminChanging(string value);
    partial void OnPassAdminChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    #endregion
		
		public Admin()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAdmin", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserAdmin
		{
			get
			{
				return this._UserAdmin;
			}
			set
			{
				if ((this._UserAdmin != value))
				{
					this.OnUserAdminChanging(value);
					this.SendPropertyChanging();
					this._UserAdmin = value;
					this.SendPropertyChanged("UserAdmin");
					this.OnUserAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassAdmin", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string PassAdmin
		{
			get
			{
				return this._PassAdmin;
			}
			set
			{
				if ((this._PassAdmin != value))
				{
					this.OnPassAdminChanging(value);
					this.SendPropertyChanging();
					this._PassAdmin = value;
					this.SendPropertyChanged("PassAdmin");
					this.OnPassAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTDonDat")]
	public partial class CTDonDat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDD;
		
		private int _MaMonAn;
		
		private int _SL;
		
		private int _DonGia;
		
		private EntityRef<DonDatTiec> _DonDatTiec;
		
		private EntityRef<ThucDon> _ThucDon;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDDChanging(int value);
    partial void OnMaDDChanged();
    partial void OnMaMonAnChanging(int value);
    partial void OnMaMonAnChanged();
    partial void OnSLChanging(int value);
    partial void OnSLChanged();
    partial void OnDonGiaChanging(int value);
    partial void OnDonGiaChanged();
    #endregion
		
		public CTDonDat()
		{
			this._DonDatTiec = default(EntityRef<DonDatTiec>);
			this._ThucDon = default(EntityRef<ThucDon>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDD", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaDD
		{
			get
			{
				return this._MaDD;
			}
			set
			{
				if ((this._MaDD != value))
				{
					if (this._DonDatTiec.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDDChanging(value);
					this.SendPropertyChanging();
					this._MaDD = value;
					this.SendPropertyChanged("MaDD");
					this.OnMaDDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMonAn", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaMonAn
		{
			get
			{
				return this._MaMonAn;
			}
			set
			{
				if ((this._MaMonAn != value))
				{
					if (this._ThucDon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMonAnChanging(value);
					this.SendPropertyChanging();
					this._MaMonAn = value;
					this.SendPropertyChanged("MaMonAn");
					this.OnMaMonAnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SL", DbType="Int NOT NULL")]
		public int SL
		{
			get
			{
				return this._SL;
			}
			set
			{
				if ((this._SL != value))
				{
					this.OnSLChanging(value);
					this.SendPropertyChanging();
					this._SL = value;
					this.SendPropertyChanged("SL");
					this.OnSLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Int NOT NULL")]
		public int DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonDatTiec_CTDonDat", Storage="_DonDatTiec", ThisKey="MaDD", OtherKey="MaDD", IsForeignKey=true)]
		public DonDatTiec DonDatTiec
		{
			get
			{
				return this._DonDatTiec.Entity;
			}
			set
			{
				DonDatTiec previousValue = this._DonDatTiec.Entity;
				if (((previousValue != value) 
							|| (this._DonDatTiec.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DonDatTiec.Entity = null;
						previousValue.CTDonDats.Remove(this);
					}
					this._DonDatTiec.Entity = value;
					if ((value != null))
					{
						value.CTDonDats.Add(this);
						this._MaDD = value.MaDD;
					}
					else
					{
						this._MaDD = default(int);
					}
					this.SendPropertyChanged("DonDatTiec");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThucDon_CTDonDat", Storage="_ThucDon", ThisKey="MaMonAn", OtherKey="MaMonAn", IsForeignKey=true)]
		public ThucDon ThucDon
		{
			get
			{
				return this._ThucDon.Entity;
			}
			set
			{
				ThucDon previousValue = this._ThucDon.Entity;
				if (((previousValue != value) 
							|| (this._ThucDon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ThucDon.Entity = null;
						previousValue.CTDonDats.Remove(this);
					}
					this._ThucDon.Entity = value;
					if ((value != null))
					{
						value.CTDonDats.Add(this);
						this._MaMonAn = value.MaMonAn;
					}
					else
					{
						this._MaMonAn = default(int);
					}
					this.SendPropertyChanged("ThucDon");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DonDatTiec")]
	public partial class DonDatTiec : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDD;
		
		private string _HoTenKH;
		
		private string _DiaChi;
		
		private int _SDT;
		
		private int _MaNV;
		
		private System.DateTime _NgayLap;
		
		private System.DateTime _NgayToChuc;
		
		private string _HinhThucToChuc;
		
		private int _MaSanh;
		
		private string _Buoi;
		
		private EntitySet<CTDonDat> _CTDonDats;
		
		private EntitySet<HoaDon> _HoaDons;
		
		private EntityRef<NhanVien> _NhanVien;
		
		private EntityRef<Sanh> _Sanh;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDDChanging(int value);
    partial void OnMaDDChanged();
    partial void OnHoTenKHChanging(string value);
    partial void OnHoTenKHChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnSDTChanging(int value);
    partial void OnSDTChanged();
    partial void OnMaNVChanging(int value);
    partial void OnMaNVChanged();
    partial void OnNgayLapChanging(System.DateTime value);
    partial void OnNgayLapChanged();
    partial void OnNgayToChucChanging(System.DateTime value);
    partial void OnNgayToChucChanged();
    partial void OnHinhThucToChucChanging(string value);
    partial void OnHinhThucToChucChanged();
    partial void OnMaSanhChanging(int value);
    partial void OnMaSanhChanged();
    partial void OnBuoiChanging(string value);
    partial void OnBuoiChanged();
    #endregion
		
		public DonDatTiec()
		{
			this._CTDonDats = new EntitySet<CTDonDat>(new Action<CTDonDat>(this.attach_CTDonDats), new Action<CTDonDat>(this.detach_CTDonDats));
			this._HoaDons = new EntitySet<HoaDon>(new Action<HoaDon>(this.attach_HoaDons), new Action<HoaDon>(this.detach_HoaDons));
			this._NhanVien = default(EntityRef<NhanVien>);
			this._Sanh = default(EntityRef<Sanh>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDD", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaDD
		{
			get
			{
				return this._MaDD;
			}
			set
			{
				if ((this._MaDD != value))
				{
					this.OnMaDDChanging(value);
					this.SendPropertyChanging();
					this._MaDD = value;
					this.SendPropertyChanged("MaDD");
					this.OnMaDDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTenKH", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string HoTenKH
		{
			get
			{
				return this._HoTenKH;
			}
			set
			{
				if ((this._HoTenKH != value))
				{
					this.OnHoTenKHChanging(value);
					this.SendPropertyChanging();
					this._HoTenKH = value;
					this.SendPropertyChanged("HoTenKH");
					this.OnHoTenKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="Int NOT NULL")]
		public int SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="Int NOT NULL")]
		public int MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayLap", DbType="DateTime NOT NULL")]
		public System.DateTime NgayLap
		{
			get
			{
				return this._NgayLap;
			}
			set
			{
				if ((this._NgayLap != value))
				{
					this.OnNgayLapChanging(value);
					this.SendPropertyChanging();
					this._NgayLap = value;
					this.SendPropertyChanged("NgayLap");
					this.OnNgayLapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayToChuc", DbType="DateTime NOT NULL")]
		public System.DateTime NgayToChuc
		{
			get
			{
				return this._NgayToChuc;
			}
			set
			{
				if ((this._NgayToChuc != value))
				{
					this.OnNgayToChucChanging(value);
					this.SendPropertyChanging();
					this._NgayToChuc = value;
					this.SendPropertyChanged("NgayToChuc");
					this.OnNgayToChucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhThucToChuc", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string HinhThucToChuc
		{
			get
			{
				return this._HinhThucToChuc;
			}
			set
			{
				if ((this._HinhThucToChuc != value))
				{
					this.OnHinhThucToChucChanging(value);
					this.SendPropertyChanging();
					this._HinhThucToChuc = value;
					this.SendPropertyChanged("HinhThucToChuc");
					this.OnHinhThucToChucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSanh", DbType="Int NOT NULL")]
		public int MaSanh
		{
			get
			{
				return this._MaSanh;
			}
			set
			{
				if ((this._MaSanh != value))
				{
					if (this._Sanh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSanhChanging(value);
					this.SendPropertyChanging();
					this._MaSanh = value;
					this.SendPropertyChanged("MaSanh");
					this.OnMaSanhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Buoi", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string Buoi
		{
			get
			{
				return this._Buoi;
			}
			set
			{
				if ((this._Buoi != value))
				{
					this.OnBuoiChanging(value);
					this.SendPropertyChanging();
					this._Buoi = value;
					this.SendPropertyChanged("Buoi");
					this.OnBuoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonDatTiec_CTDonDat", Storage="_CTDonDats", ThisKey="MaDD", OtherKey="MaDD")]
		public EntitySet<CTDonDat> CTDonDats
		{
			get
			{
				return this._CTDonDats;
			}
			set
			{
				this._CTDonDats.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonDatTiec_HoaDon", Storage="_HoaDons", ThisKey="MaDD", OtherKey="MaDD")]
		public EntitySet<HoaDon> HoaDons
		{
			get
			{
				return this._HoaDons;
			}
			set
			{
				this._HoaDons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_DonDatTiec", Storage="_NhanVien", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.DonDatTiecs.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.DonDatTiecs.Add(this);
						this._MaNV = value.MaNV;
					}
					else
					{
						this._MaNV = default(int);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sanh_DonDatTiec", Storage="_Sanh", ThisKey="MaSanh", OtherKey="MaSanh", IsForeignKey=true)]
		public Sanh Sanh
		{
			get
			{
				return this._Sanh.Entity;
			}
			set
			{
				Sanh previousValue = this._Sanh.Entity;
				if (((previousValue != value) 
							|| (this._Sanh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sanh.Entity = null;
						previousValue.DonDatTiecs.Remove(this);
					}
					this._Sanh.Entity = value;
					if ((value != null))
					{
						value.DonDatTiecs.Add(this);
						this._MaSanh = value.MaSanh;
					}
					else
					{
						this._MaSanh = default(int);
					}
					this.SendPropertyChanged("Sanh");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTDonDats(CTDonDat entity)
		{
			this.SendPropertyChanging();
			entity.DonDatTiec = this;
		}
		
		private void detach_CTDonDats(CTDonDat entity)
		{
			this.SendPropertyChanging();
			entity.DonDatTiec = null;
		}
		
		private void attach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.DonDatTiec = this;
		}
		
		private void detach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.DonDatTiec = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HoaDon")]
	public partial class HoaDon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaHD;
		
		private int _MaDD;
		
		private System.DateTime _NgayLap;
		
		private bool _TinhTrang;
		
		private EntityRef<DonDatTiec> _DonDatTiec;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHDChanging(int value);
    partial void OnMaHDChanged();
    partial void OnMaDDChanging(int value);
    partial void OnMaDDChanged();
    partial void OnNgayLapChanging(System.DateTime value);
    partial void OnNgayLapChanged();
    partial void OnTinhTrangChanging(bool value);
    partial void OnTinhTrangChanged();
    #endregion
		
		public HoaDon()
		{
			this._DonDatTiec = default(EntityRef<DonDatTiec>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHD", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaHD
		{
			get
			{
				return this._MaHD;
			}
			set
			{
				if ((this._MaHD != value))
				{
					this.OnMaHDChanging(value);
					this.SendPropertyChanging();
					this._MaHD = value;
					this.SendPropertyChanged("MaHD");
					this.OnMaHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDD", DbType="Int NOT NULL")]
		public int MaDD
		{
			get
			{
				return this._MaDD;
			}
			set
			{
				if ((this._MaDD != value))
				{
					if (this._DonDatTiec.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDDChanging(value);
					this.SendPropertyChanging();
					this._MaDD = value;
					this.SendPropertyChanged("MaDD");
					this.OnMaDDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayLap", DbType="DateTime NOT NULL")]
		public System.DateTime NgayLap
		{
			get
			{
				return this._NgayLap;
			}
			set
			{
				if ((this._NgayLap != value))
				{
					this.OnNgayLapChanging(value);
					this.SendPropertyChanging();
					this._NgayLap = value;
					this.SendPropertyChanged("NgayLap");
					this.OnNgayLapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="Bit NOT NULL")]
		public bool TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonDatTiec_HoaDon", Storage="_DonDatTiec", ThisKey="MaDD", OtherKey="MaDD", IsForeignKey=true)]
		public DonDatTiec DonDatTiec
		{
			get
			{
				return this._DonDatTiec.Entity;
			}
			set
			{
				DonDatTiec previousValue = this._DonDatTiec.Entity;
				if (((previousValue != value) 
							|| (this._DonDatTiec.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DonDatTiec.Entity = null;
						previousValue.HoaDons.Remove(this);
					}
					this._DonDatTiec.Entity = value;
					if ((value != null))
					{
						value.HoaDons.Add(this);
						this._MaDD = value.MaDD;
					}
					else
					{
						this._MaDD = default(int);
					}
					this.SendPropertyChanged("DonDatTiec");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiThucDon")]
	public partial class LoaiThucDon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaLoai;
		
		private string _TenLoai;
		
		private EntitySet<ThucDon> _ThucDons;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiChanging(int value);
    partial void OnMaLoaiChanged();
    partial void OnTenLoaiChanging(string value);
    partial void OnTenLoaiChanged();
    #endregion
		
		public LoaiThucDon()
		{
			this._ThucDons = new EntitySet<ThucDon>(new Action<ThucDon>(this.attach_ThucDons), new Action<ThucDon>(this.detach_ThucDons));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoai", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaLoai
		{
			get
			{
				return this._MaLoai;
			}
			set
			{
				if ((this._MaLoai != value))
				{
					this.OnMaLoaiChanging(value);
					this.SendPropertyChanging();
					this._MaLoai = value;
					this.SendPropertyChanged("MaLoai");
					this.OnMaLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoai", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenLoai
		{
			get
			{
				return this._TenLoai;
			}
			set
			{
				if ((this._TenLoai != value))
				{
					this.OnTenLoaiChanging(value);
					this.SendPropertyChanging();
					this._TenLoai = value;
					this.SendPropertyChanged("TenLoai");
					this.OnTenLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiThucDon_ThucDon", Storage="_ThucDons", ThisKey="MaLoai", OtherKey="MaLoai")]
		public EntitySet<ThucDon> ThucDons
		{
			get
			{
				return this._ThucDons;
			}
			set
			{
				this._ThucDons.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ThucDons(ThucDon entity)
		{
			this.SendPropertyChanging();
			entity.LoaiThucDon = this;
		}
		
		private void detach_ThucDons(ThucDon entity)
		{
			this.SendPropertyChanging();
			entity.LoaiThucDon = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhanVien")]
	public partial class NhanVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaNV;
		
		private string _HoTen;
		
		private string _GioiTinh;
		
		private System.DateTime _NgaySinh;
		
		private string _Email;
		
		private int _SDT;
		
		private string _TaiKhoan;
		
		private string _MatKhau;
		
		private EntitySet<DonDatTiec> _DonDatTiecs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNVChanging(int value);
    partial void OnMaNVChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnNgaySinhChanging(System.DateTime value);
    partial void OnNgaySinhChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnSDTChanging(int value);
    partial void OnSDTChanged();
    partial void OnTaiKhoanChanging(string value);
    partial void OnTaiKhoanChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    #endregion
		
		public NhanVien()
		{
			this._DonDatTiecs = new EntitySet<DonDatTiec>(new Action<DonDatTiec>(this.attach_DonDatTiecs), new Action<DonDatTiec>(this.detach_DonDatTiecs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NVarChar(4) NOT NULL", CanBeNull=false)]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="DateTime NOT NULL")]
		public System.DateTime NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="Int NOT NULL")]
		public int SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaiKhoan", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string TaiKhoan
		{
			get
			{
				return this._TaiKhoan;
			}
			set
			{
				if ((this._TaiKhoan != value))
				{
					this.OnTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._TaiKhoan = value;
					this.SendPropertyChanged("TaiKhoan");
					this.OnTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_DonDatTiec", Storage="_DonDatTiecs", ThisKey="MaNV", OtherKey="MaNV")]
		public EntitySet<DonDatTiec> DonDatTiecs
		{
			get
			{
				return this._DonDatTiecs;
			}
			set
			{
				this._DonDatTiecs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DonDatTiecs(DonDatTiec entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_DonDatTiecs(DonDatTiec entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sanh")]
	public partial class Sanh : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaSanh;
		
		private string _TenSanh;
		
		private int _DonGia;
		
		private string _MoTa;
		
		private string _Hinh;
		
		private EntitySet<DonDatTiec> _DonDatTiecs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSanhChanging(int value);
    partial void OnMaSanhChanged();
    partial void OnTenSanhChanging(string value);
    partial void OnTenSanhChanged();
    partial void OnDonGiaChanging(int value);
    partial void OnDonGiaChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    partial void OnHinhChanging(string value);
    partial void OnHinhChanged();
    #endregion
		
		public Sanh()
		{
			this._DonDatTiecs = new EntitySet<DonDatTiec>(new Action<DonDatTiec>(this.attach_DonDatTiecs), new Action<DonDatTiec>(this.detach_DonDatTiecs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSanh", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaSanh
		{
			get
			{
				return this._MaSanh;
			}
			set
			{
				if ((this._MaSanh != value))
				{
					this.OnMaSanhChanging(value);
					this.SendPropertyChanging();
					this._MaSanh = value;
					this.SendPropertyChanged("MaSanh");
					this.OnMaSanhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSanh", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TenSanh
		{
			get
			{
				return this._TenSanh;
			}
			set
			{
				if ((this._TenSanh != value))
				{
					this.OnTenSanhChanging(value);
					this.SendPropertyChanging();
					this._TenSanh = value;
					this.SendPropertyChanged("TenSanh");
					this.OnTenSanhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Int NOT NULL")]
		public int DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hinh", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Hinh
		{
			get
			{
				return this._Hinh;
			}
			set
			{
				if ((this._Hinh != value))
				{
					this.OnHinhChanging(value);
					this.SendPropertyChanging();
					this._Hinh = value;
					this.SendPropertyChanged("Hinh");
					this.OnHinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sanh_DonDatTiec", Storage="_DonDatTiecs", ThisKey="MaSanh", OtherKey="MaSanh")]
		public EntitySet<DonDatTiec> DonDatTiecs
		{
			get
			{
				return this._DonDatTiecs;
			}
			set
			{
				this._DonDatTiecs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DonDatTiecs(DonDatTiec entity)
		{
			this.SendPropertyChanging();
			entity.Sanh = this;
		}
		
		private void detach_DonDatTiecs(DonDatTiec entity)
		{
			this.SendPropertyChanging();
			entity.Sanh = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ThucDon")]
	public partial class ThucDon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaMonAn;
		
		private string _TenMonAn;
		
		private int _DonGia;
		
		private string _MoTa;
		
		private int _MaLoai;
		
		private string _Hinh;
		
		private EntitySet<CTDonDat> _CTDonDats;
		
		private EntityRef<LoaiThucDon> _LoaiThucDon;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaMonAnChanging(int value);
    partial void OnMaMonAnChanged();
    partial void OnTenMonAnChanging(string value);
    partial void OnTenMonAnChanged();
    partial void OnDonGiaChanging(int value);
    partial void OnDonGiaChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    partial void OnMaLoaiChanging(int value);
    partial void OnMaLoaiChanged();
    partial void OnHinhChanging(string value);
    partial void OnHinhChanged();
    #endregion
		
		public ThucDon()
		{
			this._CTDonDats = new EntitySet<CTDonDat>(new Action<CTDonDat>(this.attach_CTDonDats), new Action<CTDonDat>(this.detach_CTDonDats));
			this._LoaiThucDon = default(EntityRef<LoaiThucDon>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMonAn", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaMonAn
		{
			get
			{
				return this._MaMonAn;
			}
			set
			{
				if ((this._MaMonAn != value))
				{
					this.OnMaMonAnChanging(value);
					this.SendPropertyChanging();
					this._MaMonAn = value;
					this.SendPropertyChanged("MaMonAn");
					this.OnMaMonAnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenMonAn", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenMonAn
		{
			get
			{
				return this._TenMonAn;
			}
			set
			{
				if ((this._TenMonAn != value))
				{
					this.OnTenMonAnChanging(value);
					this.SendPropertyChanging();
					this._TenMonAn = value;
					this.SendPropertyChanged("TenMonAn");
					this.OnTenMonAnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Int NOT NULL")]
		public int DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoai", DbType="Int NOT NULL")]
		public int MaLoai
		{
			get
			{
				return this._MaLoai;
			}
			set
			{
				if ((this._MaLoai != value))
				{
					if (this._LoaiThucDon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiChanging(value);
					this.SendPropertyChanging();
					this._MaLoai = value;
					this.SendPropertyChanged("MaLoai");
					this.OnMaLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hinh", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Hinh
		{
			get
			{
				return this._Hinh;
			}
			set
			{
				if ((this._Hinh != value))
				{
					this.OnHinhChanging(value);
					this.SendPropertyChanging();
					this._Hinh = value;
					this.SendPropertyChanged("Hinh");
					this.OnHinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThucDon_CTDonDat", Storage="_CTDonDats", ThisKey="MaMonAn", OtherKey="MaMonAn")]
		public EntitySet<CTDonDat> CTDonDats
		{
			get
			{
				return this._CTDonDats;
			}
			set
			{
				this._CTDonDats.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiThucDon_ThucDon", Storage="_LoaiThucDon", ThisKey="MaLoai", OtherKey="MaLoai", IsForeignKey=true)]
		public LoaiThucDon LoaiThucDon
		{
			get
			{
				return this._LoaiThucDon.Entity;
			}
			set
			{
				LoaiThucDon previousValue = this._LoaiThucDon.Entity;
				if (((previousValue != value) 
							|| (this._LoaiThucDon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiThucDon.Entity = null;
						previousValue.ThucDons.Remove(this);
					}
					this._LoaiThucDon.Entity = value;
					if ((value != null))
					{
						value.ThucDons.Add(this);
						this._MaLoai = value.MaLoai;
					}
					else
					{
						this._MaLoai = default(int);
					}
					this.SendPropertyChanged("LoaiThucDon");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTDonDats(CTDonDat entity)
		{
			this.SendPropertyChanging();
			entity.ThucDon = this;
		}
		
		private void detach_CTDonDats(CTDonDat entity)
		{
			this.SendPropertyChanging();
			entity.ThucDon = null;
		}
	}
}
#pragma warning restore 1591
